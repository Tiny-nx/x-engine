@startuml
skinparam componentStyle uml2
skinparam packageStyle rectangle
 
package 模块管理 {
  class NativeContext {
    + (Set<NativeModule>) getModules();
    + (NativeModule) getModuleById(id:string);
  }
  
  
  class  NativeModule {
    + (string) {abstract}  moduleId;
    + (void) afterAllMouduleInited();

  }
}
package 原生模块(JSI) {
  class JSIContext extends NativeModule{
    + (Set<JSIModule>) getJSIModules(); 
  }
  
  
  class  JSIModule {
    + (string) {abstract}  moduleId;
  }
} 

package JSI模块 {

  interface xengine__module_router_protocol {
    //model.ts自动生成
    +  (void) {abstract}  _open (...,callback:Func)
  }
  abstract class xengine__module_open extends  JSIModule  implements xengine__module_router_protocol { 
    //model.ts自动生成
    + (void) open (...,callback:Func)
  }
}

 


package 协议模块 {
  interface iOpen {    
  +(NSString*) type;
  +(void)open:(...);
 
  }
   interface iOpenManager {    
  +(void)open:(...);
   }
   interface iContainer {
      // 生命周期
   }
}
  
  package 原生模块(OpenManager) {
 class OpenManagerModule extends NativeModule implements iOpenManager{  
    - Stack<iContainer>: containers;
    - Openers: Map<string,iOpen>;
  }


  }
    package 原生模块(Open.H5) {
  class OpenH5Module   extends NativeModule implements iOpen{
    - (string) moduleId;
    - (void) open(...);
  }
    }
    package 原生模块(Open.Native) {
    class OpenNativeModule   extends NativeModule implements iOpen{
    - (string) moduleId;
    - (void) open(...);
  }
   
}
package 原生模块(Container){
class WebViewContainer implements iContainer {}
}

WebViewContainer --> JSIContext

  
package JSI模块(Open){
class __xengine__module_open extends xengine__module_open{
    - openManager: iOpenManager;
  }
  
 
  
}

NativeContext o--  NativeModule : aggregation
 

@enduml
