
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!

  package com.zkty.jsi;

  import java.util.List;
  import java.util.Map;
  import java.util.Set;
  import android.webkit.JavascriptInterface;
  import com.alibaba.fastjson.JSON;
  import com.alibaba.fastjson.JSONObject;
  import com.zkty.modules.nativ.jsi.bridge.CompletionHandler;
  import com.zkty.modules.nativ.jsi.JSIModule;
  import androidx.annotation.Nullable;

  
  class NamedDTO {
    public String title;

    public Integer titleSize;
  }
  
  class _0_com_zkty_jsi_xxxx_DTO {
    public String name;
  }
  
  interface xengine_jsi_xxxx_protocol {
        String _syncMethod(NamedDTO dto);
    String _syncStringMethod(String dto);
    void _syncMethod1();
public void _asyncMethod(_0_com_zkty_jsi_xxxx_DTO dto, final CompletionHandler<String> handler);
  }
  
  
  public abstract class xengine_jsi_xxxx extends JSIModule implements xengine_jsi_xxxx_protocol {
    @Override
    public String moduleId() {
      return "com.zkty.jsi.xxxx";
    }
  
        @JavascriptInterface
        public String syncMethod(JSONObject jsonobj) {
          String defaultStr = "{  \"titleSize\": 16}";
      obj = mergeDefault(obj, defaultStr);
      NamedDTO data= convert(obj,NamedDTO.class);
          return _syncMethod(dto);
        }
        

        @JavascriptInterface
        public String syncStringMethod(JSONObject jsonobj) {
          String data= convert(obj,String.class);
          return _syncStringMethod(dto);
        }
        

        @JavascriptInterface
        public Object syncMethod1(JSONObject jsonobj) {
          
          _syncMethod1();
          return null;
        }
        

    @JavascriptInterface
    final public void asyncMethod(JSONObject obj, final CompletionHandler<Object> handler) {
      String defaultStr = "{  \"name\": \"default value\"}";
      obj = mergeDefault(obj, defaultStr);
      _0_com_zkty_jsi_xxxx_DTO data= convert(obj,_0_com_zkty_jsi_xxxx_DTO.class);
      _asyncMethod(data, new CompletionHandler<String>() {
        @Override
        public void complete(String retValue) { handler.complete(retValue); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(String value) { handler.setProgressData(value); }
      });

    }
  }
  

  