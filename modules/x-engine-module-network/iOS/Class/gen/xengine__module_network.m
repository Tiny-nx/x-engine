
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!


#import "xengine__module_network.h"
#import <micros.h>


@implementation RequestDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	if ([propertyName isEqualToString:@"method"]) { return YES; }
   	if ([propertyName isEqualToString:@"headers"]) { return YES; }
   	if ([propertyName isEqualToString:@"params"]) { return YES; }	return NO;
    }
@end
    
  
@implementation ReponseDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   
   
   	if ([propertyName isEqualToString:@"request"]) { return YES; }	return NO;
    }
@end
    
  
@implementation DownloadRequestDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	if ([propertyName isEqualToString:@"method"]) { return YES; }
   	if ([propertyName isEqualToString:@"headers"]) { return YES; }
   	if ([propertyName isEqualToString:@"params"]) { return YES; }
   	if ([propertyName isEqualToString:@"__event__"]) { return YES; }
   	return NO;
    }
@end
    
  
@implementation DownloadReponseDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	if ([propertyName isEqualToString:@"base64DataStr"]) { return YES; }
   
   
   	if ([propertyName isEqualToString:@"request"]) { return YES; }	return NO;
    }
@end
    
  
@implementation UploadRequestDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	if ([propertyName isEqualToString:@"method"]) { return YES; }
   	if ([propertyName isEqualToString:@"headers"]) { return YES; }
   	if ([propertyName isEqualToString:@"params"]) { return YES; }
   
   	if ([propertyName isEqualToString:@"filepath"]) { return YES; }
   	if ([propertyName isEqualToString:@"fileBaseStr"]) { return YES; }
   	if ([propertyName isEqualToString:@"__event__"]) { return YES; }	return NO;
    }
@end
    
  
@implementation UploadReponseDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   
   
   	if ([propertyName isEqualToString:@"request"]) { return YES; }	return NO;
    }
@end
    




  @implementation xengine__module_network

    - (instancetype)init
    {
        self = [super init];
        return self;
    }

    - (NSString *)moduleId{
        return @"com.zkty.module.network";
    }
    
    - (void) getRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _getRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) postRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _postRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) deleteRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _deleteRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) headRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _headRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) putRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _putRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) patchRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          RequestDTO* dto = [self convert:dict clazz:RequestDTO.class];
          [self _patchRequest:dto complete:^(ReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) downloadRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          DownloadRequestDTO* dto = [self convert:dict clazz:DownloadRequestDTO.class];
          [self _downloadRequest:dto complete:^(DownloadReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) uploadRequest:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          UploadRequestDTO* dto = [self convert:dict clazz:UploadRequestDTO.class];
          [self _uploadRequest:dto complete:^(UploadReponseDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }

- (void)_deleteRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_downloadRequest:(DownloadRequestDTO *)dto complete:(void (^)(DownloadReponseDTO *, BOOL))completionHandler {
        
}

- (void)_getRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_headRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_patchRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_postRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_putRequest:(RequestDTO *)dto complete:(void (^)(ReponseDTO *, BOOL))completionHandler {
    
}

- (void)_uploadRequest:(UploadRequestDTO *)dto complete:(void (^)(UploadReponseDTO *, BOOL))completionHandler {
    
}

@end
