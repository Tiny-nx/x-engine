
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!


#import "xengine__module_ui.h"
#import <micros.h>


@implementation XETipDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {	return NO;
    }
@end
    
  
@implementation XEToastDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   
   	return NO;
    }
@end
    
  
@implementation XEModalDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {	if ([propertyName isEqualToString:@"tipTitle"]) { return YES; }
   
   	return NO;
    }
@end
    
  
@implementation XEPickerDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   
   
   
   
   
   
   
   
   
   
   
   
   	return NO;
    }
@end
    
  
@implementation XESheetDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	if ([propertyName isEqualToString:@"itemList"]) { return YES; }
   	if ([propertyName isEqualToString:@"content"]) { return YES; }
   	return NO;
    }
@end
    
  
@implementation XERetDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {	return NO;
    }
@end
    




  @implementation xengine__module_ui
    - (instancetype)init
    {
        self = [super init];
        return self;
    }

    - (NSString *)moduleId{
        return @"com.zkty.module.ui";
    }
    
    - (void) showToast:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          XEToastDTO* dto = [self convert:dict clazz:XEToastDTO.class];
          [self _showToast:dto complete:^(BOOL complete) {
             completionHandler(nil ,complete);
          }];
      }
    - (void) hideToast:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          [self _hideToast:^(BOOL complete) {
                 completionHandler(nil,complete); 
          }];
      }
    - (void) hiddenHudToast:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          [self _hiddenHudToast:^(BOOL complete) {
                 completionHandler(nil,complete); 
          }];
      }
    - (void) showLoading:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          XETipDTO* dto = [self convert:dict clazz:XETipDTO.class];
          [self _showLoading:dto complete:^(BOOL complete) {
             completionHandler(nil ,complete);
          }];
      }
    - (void) hideLoading:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          [self _hideLoading:^(BOOL complete) {
                 completionHandler(nil,complete); 
          }];
      }
    - (void) showModal:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          XEModalDTO* dto = [self convert:dict clazz:XEModalDTO.class];
          [self _showModal:dto complete:^(XERetDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) showActionSheet:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          XESheetDTO* dto = [self convert:dict clazz:XESheetDTO.class];
          [self _showActionSheet:dto complete:^(XERetDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) showPickerView:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          XEPickerDTO* dto = [self convert:dict clazz:XEPickerDTO.class];
          [self _showPickerView:dto complete:^(XERetDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) hideTabbar:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          [self _hideTabbar:^(BOOL complete) {
                 completionHandler(nil,complete); 
          }];
      }
    - (void) showTabbar:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          [self _showTabbar:^(BOOL complete) {
                 completionHandler(nil,complete); 
          }];
      }
  @end
