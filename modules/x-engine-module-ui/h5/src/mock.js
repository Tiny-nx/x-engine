
// MODIFIALBE! 
// generated by x-cli,
// only generated when file is not existed!

export default {

    
    showAlertAction(args={
          "isAlert": "1",
          "title": "title",
          "content": "content",
          "showCancel": false,
          "btnItem": [
                    {
                              "title": "btn1",
                              "font": {
                                        "fontSize": "16"
                              }
                    }
          ]
},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("showAlertAction no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    showLoading(args={
          "title": "title",
          "font": {
                    "fontSize": "16"
          }
},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("showLoading no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    hideLoading(args={},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("hideLoading no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    showModal(args={
          "isAlert": "1",
          "title": "title",
          "content": "content",
          "showCancel": false,
          "btnItem": [
                    {
                              "title": "btn1",
                              "font": {
                                        "fontSize": "16"
                              }
                    }
          ]
},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("showModal no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    showToast(args={
          "title": "title",
          "icon": "icon",
          "duration": "1"
},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("showToast no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    hideToast(args={},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("hideToast no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    ,
    
    showPickerView(args={
          "toolBarBackgroundColor": "#f5f5f5",
          "pickerBackgroundColor": "#f7f7f7",
          "backgroundColor": "#1E1F20",
          "backgroundColorAlpha": "0.7",
          "pickerHeight": 250,
          "rowHeight": 44,
          "leftText": "取消",
          "leftTextColor": "#0000FF",
          "leftTextSize": 20,
          "rightText": "确定",
          "rightTextColor": "#0000FF",
          "rightTextSize": 20,
          "data": [
                    [
                              "1a",
                              "2b",
                              "3c"
                    ],
                    [
                              "as",
                              "df",
                              "cd"
                    ]
          ]
},userPromise){
      if(userPromise){
        return userPromise()
      }else{
        return new Promise((resolve, reject)=>{
          alert("showPickerView no h5 implementation, you can implement this function in mock.js in  h5/src/mock.js");
          resolve(null);
        });
      }

    }
    
}
