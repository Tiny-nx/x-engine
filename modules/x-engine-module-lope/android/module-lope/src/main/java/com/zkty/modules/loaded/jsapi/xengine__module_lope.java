
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!

  package com.zkty.modules.loaded.jsapi;

  import java.util.List;
  import java.util.Map;
  import java.util.Set;
  import android.webkit.JavascriptInterface;
  import com.alibaba.fastjson.JSONObject;
  import com.zkty.modules.dsbridge.CompletionHandler;
  import com.zkty.modules.engine.annotation.Optional;
  import com.zkty.modules.engine.core.xengine__module_BaseModule;
  import androidx.annotation.Nullable;

  
  class LopePIDDTO {
    public String pid;

    public String __event__;
  }
  
  class LopeScanDTO {
    public Integer interval;

    public List<String> serviceUUIDs;

    public boolean immediately;

    public String __event__;
  }
  
  class OpenDoorDTO {
    public List<Map<String,String>> locks;

    public String __event__;
  }
  
  class LightLiftDTO {
    public String mac;

    public Integer ioIndex;

    public String __event__;
  }
  
  class LopeRetStatusDTO {
    public String status;

    public String code;
  }
  
  interface xengine__module_lope_i {
    public void _initSdkAndConfigure(LopePIDDTO dto, final CompletionHandler<LopeRetStatusDTO> handler);
public void _scanDevice(LopeScanDTO dto, final CompletionHandler<LopeRetStatusDTO> handler);
public void _openDoor(OpenDoorDTO dto, final CompletionHandler<LopeRetStatusDTO> handler);
public void _lightLift(LightLiftDTO dto, final CompletionHandler<Nullable> handler);
  }
  
  
  public abstract class xengine__module_lope extends xengine__module_BaseModule implements xengine__module_lope_i {
    @Override
    public String moduleId() {
      return "com.zkty.module.lope";
    }
  
    @JavascriptInterface
    final public void initSdkAndConfigure(JSONObject obj, final CompletionHandler<Object> handler) {
      LopePIDDTO data= convert(obj,LopePIDDTO.class);
      _initSdkAndConfigure(data, new CompletionHandler<LopeRetStatusDTO>() {
        @Override
        public void complete(LopeRetStatusDTO retValue) { handler.complete(retValue); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(LopeRetStatusDTO value) { handler.setProgressData(value); }
      });

    }

    @JavascriptInterface
    final public void scanDevice(JSONObject obj, final CompletionHandler<Object> handler) {
      LopeScanDTO data= convert(obj,LopeScanDTO.class);
      _scanDevice(data, new CompletionHandler<LopeRetStatusDTO>() {
        @Override
        public void complete(LopeRetStatusDTO retValue) { handler.complete(retValue); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(LopeRetStatusDTO value) { handler.setProgressData(value); }
      });

    }

    @JavascriptInterface
    final public void openDoor(JSONObject obj, final CompletionHandler<Object> handler) {
      OpenDoorDTO data= convert(obj,OpenDoorDTO.class);
      _openDoor(data, new CompletionHandler<LopeRetStatusDTO>() {
        @Override
        public void complete(LopeRetStatusDTO retValue) { handler.complete(retValue); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(LopeRetStatusDTO value) { handler.setProgressData(value); }
      });

    }

    @JavascriptInterface
    final public void lightLift(JSONObject obj, final CompletionHandler<Object> handler) {
      LightLiftDTO data= convert(obj,LightLiftDTO.class);
      _lightLift(data, new CompletionHandler<Nullable>() {
        @Override
        public void complete(Nullable retValue) { handler.complete(null); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(Nullable value) { handler.setProgressData(null); }
      });

    }
  }
  

  