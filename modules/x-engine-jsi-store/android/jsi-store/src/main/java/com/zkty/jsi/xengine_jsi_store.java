
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!

  package com.zkty.jsi;

  import java.util.List;
  import java.util.Map;
  import java.util.Set;
  import android.webkit.JavascriptInterface;
  import com.alibaba.fastjson.JSON;
  import com.alibaba.fastjson.JSONObject;
  import com.zkty.modules.nativ.jsi.bridge.CompletionHandler;
  import com.zkty.modules.nativ.jsi.JSIModule;
  import androidx.annotation.Nullable;

  
  class ZKStoreEntryDTO {
    public String key;

    public String val;
  }
  
  class _0_com_zkty_jsi_store_DTO {
    public String key;
  }
  
  interface xengine_jsi_store_protocol {
    public void _get(_0_com_zkty_jsi_store_DTO dto, final CompletionHandler<String> handler);    String _get(_0_com_zkty_jsi_store_DTO dto);
public void _set(ZKStoreEntryDTO dto, final CompletionHandler<Nullable> handler);    Object _set(ZKStoreEntryDTO dto);
  }
  
  
  public abstract class xengine_jsi_store extends JSIModule implements xengine_jsi_store_protocol {
    @Override
    public String moduleId() {
      return "com.zkty.jsi.store";
    }
  
    @JavascriptInterface
    final public void get(JSONObject obj, final CompletionHandler<Object> handler) {
      _0_com_zkty_jsi_store_DTO data= convert(obj,_0_com_zkty_jsi_store_DTO.class);
      _get(data, new CompletionHandler<String>() {
        @Override
        public void complete(String retValue) { handler.complete(retValue); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(String value) { handler.setProgressData(value); }
      });

    }
    @JavascriptInterface
    public String get(JSONObject jsonobj) {
        _0_com_zkty_jsi_store_DTO data= convert(obj,_0_com_zkty_jsi_store_DTO.class);
        return _get(dto);
    }
    

    @JavascriptInterface
    final public void set(JSONObject obj, final CompletionHandler<Object> handler) {
      ZKStoreEntryDTO data= convert(obj,ZKStoreEntryDTO.class);
      _set(data, new CompletionHandler<Nullable>() {
        @Override
        public void complete(Nullable retValue) { handler.complete(null); }
        @Override
        public void complete() { handler.complete(); }
        @Override
        public void setProgressData(Nullable value) { handler.setProgressData(null); }
      });

    }
    @JavascriptInterface
    public Object set(JSONObject jsonobj) {
        ZKStoreEntryDTO data= convert(obj,ZKStoreEntryDTO.class);
        return _set(dto);
    }
    
  }
  

  